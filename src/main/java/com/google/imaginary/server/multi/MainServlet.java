/**
 * Copyright 2013 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.imaginary.server.multi;

import com.google.imaginary.server.config.Config;

import org.apache.velocity.VelocityContext;

import java.io.IOException;
import java.util.logging.Logger;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet that renders the whole application.
 *
 * @see <a href="http://velocity.apache.org/engine/devel/developer-guide.html">Velocity Guide</a>
 *      The selections and information generated by the user are posted to the next page the confirm
 *      servlet.
 */
public class MainServlet extends HttpServlet {

  private static final Logger logger = Logger.getLogger(MainServlet.class.getSimpleName());

  @Override
  public void init() throws ServletException {
    // Initialize Velocity Templates
    try {
      VelocityHelper.init();
    } catch (Exception e) {
      throw new ServletException(e);
    }
  }

  @Override
  public void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException {
    doPost(req, resp);
  }

  @Override
  public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {

    Config environment = Config.getEnvironment();

    VelocityHelper helper = new VelocityHelper(req, resp, environment);

    String email = helper.getParameter("email");
    String pageURL = helper.getReq().getPathInfo().substring(1);
    if (email != null && !email.equals("")) {
      helper.setCookie("email", email);
    } else {
      email = helper.getCookieValue("email", "");
    }

    VelocityContext context = new VelocityContext();
    context.put("clientId", Config.OAUTH_CLIENT_ID);
    context.put("scopes", environment.getScopes());
    if (pageURL != null && pageURL.equals("logout")) {
      helper.getSession().invalidate();
      helper.removeCookies();
      context.put("email", email);
    } else {
      context.put("email", email);
    }

    helper.writeTemplate("index.vm", context);
  }

}
